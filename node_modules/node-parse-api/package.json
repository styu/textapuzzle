{
  "name": "node-parse-api",
  "description": "A Parse.com REST API client for Node.js",
  "version": "0.1.7",
  "author": {
    "name": "Chris Johnson",
    "email": "tenorviol@yahoo.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/leveton/node-parse-api"
  },
  "main": "index",
  "engines": {
    "node": ">= 0.4.0"
  },
  "readme": "Node Parse API\n==============\n\ninstall\n-------\n\n    npm install node-parse-api\n\nexamples\n--------\n\n### setup\n\n    var Parse = require('node-parse-api').Parse;\n    \n    var APP_ID = ...;\n    var MASTER_KEY = ...;\n    \n    var app = new Parse(APP_ID, MASTER_KEY);\n\n### insert\n\n    // add a Foo object, { foo: 'bar' }\n    app.insert('Foo', { foo: 'bar' }, function (err, response) {\n      console.log(response);\n    });\n\n### insert a file\n\n    app.insertFile(fileName, data, fileType, function (err, response) {\n      fileLink = response.url;\n      parseName = response.name;\n        app.insert('Foo', { \"foo\" : fileLink, \"bar\" : parseName }, function(erro, res){\n       })\n    });\n\n### find one\n\n    // the Foo with id = 'someId'\n    app.find('Foo', 'someId', function (err, response) {\n      console.log(response);\n    });\n\n### find many\n\n    // all Foo objects with foo = 'bar'\n    app.findMany('Foo', { foo: 'bar' }, function (err, response) {\n      console.log(response);\n    });\n\n### update\n\n    app.update('Foo', 'someId', { foo: 'fubar' }, function (err, response) {\n      console.log(response);\n    });\n\n### delete\n\n    app.delete('Foo', 'someId', function (err) {\n      // nothing to see here\n    });\n\n### reset a password\n\n    //email is built into Parse's special User class \n    app.passwordReset(email, function(err, response){\n      console.log(response);\n    });\n\n### update User email\n\n    //email is built into Parse's special User class \n    app.updateUserEmail(objectId, email, function(err, response){\n      if (err) {\n        console.log(err);\n      } else {\n        console.log(response);\n      }\n    });\n\n### insert installation data\n\n    //first arg is either 'ios' or 'android'.  second arg is either the Apple deviceToken or the Android installationId.\n    app.insertInstallationData(\"ios\", \"0123456784abcdef0123456789abcdef0123456789abcdef0123456789abcdef\", function(err, response){\n      if (err) {\n        console.log(err);\n      } else {\n        console.log(response);\n      }\n    });\n\n### insert installation data with timeZone\n\n    //first arg is either 'ios' or 'android'.  second arg is either the Apple deviceToken or the Android installationId.  Third arg is the timezone string.\n    app.insertInstallationDataWithTimeZone(\"ios\", \"0123456784abcdef0123456789abcdef0123456789abcdef0123456789abcdef\", \"EST\", function(err, response){\n      if (err) {\n        console.log(err);\n      } else {\n        console.log(response);\n      }\n    });\n\n### insert installation data with channels\n\n    //first arg is either 'ios' or 'android'.  second arg is either the Apple deviceToken or the Android installationId.  Third arg is the channels array.\n    arr = [\"news\", \"sports\"];\n    app.insertInstallationDataWithChannels(\"ios\", \"0123456784abcdef0123456789abcdef0123456789abcdef0123456789abcdef\", arr, function(err, response){\n      if (err) {\n        console.log(err);\n      } else {\n        console.log(response);\n      }\n    });\n\n### insert installation data with timeZone and channels\n\n    //first arg is either 'ios' or 'android'.  second arg is either the Apple deviceToken or the Android installationId.  Third arg is the timezone string.  4th is the channels array.\n    arr = [\"news\", \"sports\"];\n    app.insertInstallationDataWithTimeZoneAndChannels(\"ios\", \"0123456784abcdef0123456789abcdef0123456789abcdef0123456789abcdef\", \"EST\", arr, function(err, response){\n      if (err) {\n        console.log(err);\n      } else {\n        console.log(response);\n      }\n    });",
  "readmeFilename": "readme.md",
  "_id": "node-parse-api@0.1.7",
  "dist": {
    "shasum": "e3bc062c971de7980cfd3d045f38850c814521fd"
  },
  "_from": "node-parse-api@",
  "_resolved": "https://registry.npmjs.org/node-parse-api/-/node-parse-api-0.1.7.tgz"
}
